const {commands} = require('./options')
// üëá
const URL_TO_BOT ='https://t.me/WorkingTimeCounter_Bot'
const URL_TO_IMG ='https://ylianova.ru/800/600/https/gutta.lv/wp-content/uploads/2015/10/test-img.jpg' 

const TelegramBot = require('node-telegram-bot-api');
// –ø–æ–¥–∫–ª—é—á–∞–µ–º (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º) –±–∏–±–ª–∏–æ—Ç–µ–∫—É, –∫–æ—Ç–æ—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ —Ä–∞–Ω–µ–µ  
// const token = '–£–∫–∞–∑—ã–≤–∞–µ–º –≤ –∫–∞–≤—ã—á–∫–∞—Ö —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–¥–∞–ª –¢–µ–ª–µ–≥—Ä–∞–º'
const token = '7429393887:AAH721lZwiUE2PfRPj9gBpgqnlfa2Vu9yX4'

// –∑–∞–¥–∞–µ–º —Ç–æ–∫–µ–Ω, —Å–∞–º API-–∫–ª—é—á —Ö—Ä–∞–Ω–∏–º –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ //
const bot = new TelegramBot(token, {polling: true});
// —Å–æ–∑–¥–∞–µ–º bot, polling –≤ –∑–Ω–∞—á–µ–Ω–∏–∏ true –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–æ–≤ –¢–ì, —á—Ç–æ–±—ã –±–æ—Ç —Ä–∞–±–æ—Ç–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ//

bot.on("polling_error", err => console.log(err.data.error.message));
// –æ–±—Ä–∞–±–æ—Ç–∞–µ–º –æ—à–∏–±–∫—É polling'–∞, –≤—ã–≤–µ–¥–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –æ–Ω–∞ –≤–æ–æ–±—â–µ –±—É–¥–µ—Ç //



function formatProductCaption(product) {
    return `*${product.name}*\n–ü–æ–¥—Ä–æ–±–Ω–µ–µ: ${product.description}`;
}
// —Ñ—É–Ω–∫—Ü–∏—è formatProductCaption –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é product –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ü–µ–Ω—É, –æ–ø–∏—Å–∞–Ω–∏–µ, –Ω–æ –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è//
const products = [
  {
      id: 1,
      name: '–î–æ–±–∞–≤–∏—Ç—å —á–∞—Å—ã',
      description: '–î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü',
      imageUrl: 'https://thumbs.dreamstime.com/b/%D0%B1%D0%B8%D0%B7%D0%BD%D0%B5%D1%81%D0%BC%D0%B5%D0%BD-%D0%B2-%D0%BA%D0%BE%D0%BD%D1%86%D0%B5%D0%BF%D1%86%D0%B8%D0%B8-%D0%BA%D0%BE%D0%BD%D1%82%D1%80%D0%BE%D0%BB%D1%8F-%D0%B2%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%B8-210055625.jpg'
  },
  {
      id: 2,
      name: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞–Ω–µ–µ –≤–≤–µ–¥–µ–Ω–Ω—ã–µ —á–∞—Å—ã',
      description: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —á–∞—Å—ã –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü',
      imageUrl: 'https://wallpapersgood.ru/wallpapers/main2/201727/1499165645595b73cd2742b5.88006733.jpg'
  },
];
// —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ products, –≤ –∫–æ—Ç–æ—Ä–æ–º –ª–µ–∂–∞—Ç —Ç–æ–≤–∞—Ä—ã —Å –Ω—É–∂–Ω—ã–º–∏ –Ω–∞–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏: id, name, price, description, imageUrl //
//   bot.onText(/\/start/, async (msg) => {
    bot.on('text', async msg => {

    // const msgWait = await bot.sendMessage(msg.chat.id, `–ë–æ—Ç –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç...`);
    const chatId = msg.chat.id;
    const response = '–ü—Ä–∏–≤–µ—Ç! üëãüèª –í—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –±–æ—Ç–∞!\n\n–ó–¥–µ—Å—å –µ—Å—Ç—å –≤–æ—Ç —Ç–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:';
    // –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É products –º–µ—Ç–æ–¥–æ–º map –∏ —Å–æ–∑–¥–∞–µ–º —Å–∞–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ //
    const messageOptions = products.map((product) => {
        return {
            chat_id: chatId,
            photo: product.imageUrl,
            caption: formatProductCaption(product),
            parse_mode: 'Markdown'
        };
    });


    try {

        if(msg.text.startsWith('/start')) {

            // setTimeout(async () => {

                // await bot.editMessageText('–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!', {
        
                //     chat_id: msgWait.chat.id,
                //     message_id: msgWait.message_id
        
                // });
        
            // }, 5000);
        
        // –í–º–µ—Å—Ç–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ–≥–æ —Å–¥–µ–ª–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, –∞ –∑–∞—Ç–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ω–∞—à –æ—Ç–≤–µ—Ç //
            
            await bot.sendMessage(chatId, response);
            
            // setTimeout(async () => {

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    await Promise.all(messageOptions.map((options, index) => {
        return bot.sendMessage(options.chat_id, options.caption, {
            parse_mode: options.parse_mode,
            reply_markup: {
                inline_keyboard: [[{text: '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å', callback_data: `product_${index}`}]]
            }
        });
    }));
// }, 5000);


            if(msg.text.length > 6) {

                const refID = msg.text.slice(7);

                await bot.sendMessage(msg.chat.id, `–í—ã –∑–∞—à–ª–∏ –ø–æ —Å—Å—ã–ª–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID ${refID}`);

            }

        }
        else if(msg.text == '/ref') {
            await bot.sendMessage(msg.chat.id, `${URL_TO_BOT}?start=${msg.from.id}`);

        }
        else if(msg.text == '/help') {

            await bot.sendMessage(msg.chat.id, `–†–∞–∑–¥–µ–ª –ø–æ–º–æ—â–∏`);

        }
        else if(msg.text == '/menu') {

            await bot.sendMessage(msg.chat.id, `–ú–µ–Ω—é –±–æ—Ç–∞`, {

                reply_markup: {

                    keyboard: [
        
                        ['‚≠êÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞', '‚≠êÔ∏è –í–∏–¥–µ–æ'],
                        ['‚≠êÔ∏è –ê—É–¥–∏–æ', '‚≠êÔ∏è –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'],
                        [{text: '‚≠êÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç', request_contact: true}, '‚≠êÔ∏è –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è'],
                        ['‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é']
        
                    ],
                    resize_keyboard: true
        
                }
        
            })
        
        }
        else if(msg.text == '‚ùå –ó–∞–∫—Ä—ã—Ç—å –º–µ–Ω—é') {

            await bot.sendMessage(msg.chat.id, '–ú–µ–Ω—é –∑–∞–∫—Ä—ã—Ç–æ', {
        
                reply_markup: {
        
                    remove_keyboard: true
        
                }
        
            })
        
        }
        else if(msg.text == '‚≠êÔ∏è –ö–∞—Ä—Ç–∏–Ω–∫–∞') {

            await bot.sendPhoto(msg.chat.id, URL_TO_IMG);
        
        }
        else if(msg.text == '‚≠êÔ∏è –ê—É–¥–∏–æ') {

            await bot.sendAudio(msg.chat.id, './audio.mp3', {
        
                caption: '<b>‚≠êÔ∏è –ê—É–¥–∏–æ</b>',
                parse_mode: 'HTML'
        
            });
        
        }
        else if(msg.text == '‚≠êÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç') {

            //–°–∫–∏–¥—ã–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç
            await bot.sendContact(msg.chat.id, process.env.CONTACT, `–ö–æ–Ω—Ç–∞–∫—Ç`, {
        
                reply_to_message_id: msg.message_id
        
            });
        
        }
        else if(msg.text == '/addtime' || msg.text == '/myhours') {

            await bot.sendMessage(msg.chat.id, '–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏,\n–ø–æ–ø—Ä–æ–±—É–π —á—Ç–æ-–Ω–∏–±—É–¥—å –¥—Ä—É–≥–æ–µ', )
        
        }
        else {

            // await bot.sendMessage(msg.chat.id, msg.text);
            await bot.sendMessage(msg.chat.id, '–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑.');


        }

    }
    catch(error) {

        console.log('error: ' + error);

    }

});

bot.on('audio', async audio => {

    try {

        await bot.sendAudio(audio.chat.id, audio.audio.file_id, {

            caption: `–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: ${audio.audio.file_name}\n–í–µ—Å —Ñ–∞–π–ª–∞: ${audio.audio.file_size} –±–∞–π—Ç\n–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ: ${audio.audio.duration} —Å–µ–∫—É–Ω–¥`

        })

    }
    catch(error) {

        console.log(error);

    }

})

bot.on('callback_query', async (query) => {
    console.log('–ó–¥–µ—Å—å —Å–æ–æ–±—â–µ–Ω–∏–µ');

    const chatId = query.message.chat.id;
    const data = query.data;

    if (data === 'back') {
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —á–µ—Ä–µ–∑ inline keyboard
        return sendProductList(chatId, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é,\n–∑–¥–µ—Å—å –µ—Å—Ç—å –≤–æ—Ç —Ç–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:');
    }

    const productId = data.split('_')[1];
    const selectedProduct = products[productId];

    if (selectedProduct) {
        await bot.sendPhoto(chatId, selectedProduct.imageUrl, {
            caption: formatProductCaption(selectedProduct),
            parse_mode: 'Markdown',
            reply_markup: {
                inline_keyboard: [[{text: '–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data: 'back'}]]
            }
        });
    }
});

async function sendProductList(chatId, response) {
    await bot.sendMessage(chatId, response);

    const messageOptions = products.map((product, index) => {
        return {
            chat_id: chatId,
            photo: product.imageUrl,
            caption: formatProductCaption(product),
            parse_mode: 'Markdown',
            callback_data: `product_${index}` // –ò–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ callback_data value
        };
    });

    await Promise.all(messageOptions.map((options, index) => {
        return bot.sendMessage(options.chat_id, options.caption, {
            parse_mode: options.parse_mode,
            reply_markup: {
                inline_keyboard: [[{text: '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å –¥–µ—Ç–∞–ª–∏', callback_data: options.callback_data}]]
            }
        });
    }));
}


// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –≤ –º–µ–Ω—é –±–æ—Ç–∞ //


bot.setMyCommands(commands);

console.log('–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');
